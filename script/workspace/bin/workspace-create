#!/bin/sh
# The file created by eJim Lee (lyjforjob@gmail.com)

CURR_DIR=`pwd`
EXEC_DIR=`dirname $0`

#source $EXEC_DIR/../config
. $EXEC_DIR/../config

# function (dash undefined the keyword)
# newmakefile [path]
newmakefile() {
	echo "# The Makefile is created automatically, don't edit it" \
	> $1/Makefile.tmp

	sed -e "s?@QEMU_DIR@?$QEMU_DIR?g" \
		-e "s?@QEMU_INSTALL_DIR@?$QEMU_INSTALL_DIR?g" \
		-e "s?@SYSTEMC_DIR@?$SYSTEMC_DIR?g" \
		-e "s?@SYSTEMC_INSTALL_DIR@?$SYSTEMC_INSTALL_DIR?g" \
		-e "s?@QEMU_CONF_FLAGS@?$QEMU_CONF_FLAGS?g" \
		-e "s?@SYSTEMC_CONF_FLAGS@?$SYSTEMC_CONF_FLAGS?g" \
		-e "s?@DMLC@?$DMLC?g" \
		-e "s?@PYTHON@?$PYTHON?g" \
		"$EXEC_DIR/def/Makefile.def" \
		>> "$1/Makefile.tmp"

	if [ -z "$QEMU_BUILD" ]; then
		sed -e "/@FOR_ALL@/d" \
			-e "/@FOR_QEMU@/d" \
			-e "s/@FOR_SYSTEMC@//g" \
			"$1/Makefile.tmp" \
			> "$1/Makefile"
	elif [ -z "$SYSTEMC_BUILD" ]; then
		sed -e "/@FOR_ALL@/d" \
			-e "/@FOR_SYSTEMC@/d" \
			-e "s/@FOR_QEMU@//g" \
			"$1/Makefile.tmp" \
			> "$1/Makefile"
	else
		sed -e "s/@FOR_ALL@//g" \
			-e "s/@FOR_QEMU@//g" \
			-e "s/@FOR_SYSTEMC@//g" \
			"$1/Makefile.tmp" \
			> "$1/Makefile"
	fi
	rm "$1/Makefile.tmp"

}

if [ -z "$*" ]; then
	echo "[ error] please input a device name, look like:"
	echo "         workspace-create simple_device"
	echo "[ point] device name is same as DML source file name"
	exit
fi

for var in $@
do
	dml_var=`echo "$@" | sed -e "s/-/_/g"`
	#dml_var=`echo "$@"`

	# create a module in modules directory
	NEW_DIR=$EXEC_DIR/../modules/$var
	if [ -f $NEW_DIR -o -d $NEW_DIR ]; then
		echo "[ error]" $var have been exist
	else
		echo "[normal]" create $var module
		mkdir "$NEW_DIR"
		echo "[normal]" create $var Makefile
		newmakefile "$NEW_DIR"
		echo "[normal]" create $var sample
		sed "s/@HELLOWORLD@/$dml_var/g" $EXEC_DIR/def/sample.dml.def > $NEW_DIR/$var.dml
		echo "[normal]" create $var test
		sed -e "s?@SYSTEMC_INSTALL_DIR@?$SYSTEMC_INSTALL_DIR?g" \
		    -e "s?@QEMU_INSTALL_DIR@?$QEMU_INSTALL_DIR?g" \
		    $EXEC_DIR/def/test.py.def \
		    > $NEW_DIR/test.py
		# systemc use skyeye core
		cp $EXEC_DIR/def/skyeye.conf.def $NEW_DIR/skyeye.conf
		cp $EXEC_DIR/def/qemu.conf.def $NEW_DIR/qemu.conf
		cp $EXEC_DIR/def/device.conf.def $NEW_DIR/device.conf
	fi

	# create a device in {qemu}/hw/simics directory
	if ! [ -z "$QEMU_BUILD" ]; then
		QEMU_DEV_DIR=$QEMU_DIR/hw/simics/$var
		if [ -f $QEMU_DEV_DIR -o -d $QEMU_DEV_DIR ]; then
			echo "[ error]" $var have been exist in QEMU
		else
			echo "[normal]" create $var QEMU device
			mkdir "$QEMU_DEV_DIR"
			echo "common-obj-y += $dml_var.o" > $QEMU_DEV_DIR/Makefile.objs
			echo "[normal]" create $var QEMU Makefile
			tmp_str=`grep "common-obj-y += $var/" $QEMU_DEV_DIR/../Makefile.objs`
			if [ -z "$tmp_str" ]; then
				echo "common-obj-y += $var/" >> $QEMU_DEV_DIR/../Makefile.objs
			fi
		fi
	fi

	# create a device in {workspace}/targets/systemc/ directory
	if ! [ -z "$SYSTEMC_BUILD" ]; then
		SYSTEMC_DEV_DIR=$EXEC_DIR/../targets/systemc/$var
		if [ -f $SYSTEMC_DEV_DIR -o -d $SYSTEMC_DEV_DIR ]; then
			echo "[ error]" $var have been exist in Skyeye
		else
			echo "[normal]" create $var SystemC device
			mkdir "$SYSTEMC_DEV_DIR"
			echo "[normal]" create $var SystemC Makefile
			if ! [ -f "$SYSTEMC_DEV_DIR/Makefile" ]; then
				sed -e "s?@SYSTEMC_DIR@?$SYSTEMC_DIR?g" \
					-e "s?@SYSTEMC_INSTALL_DIR@?$SYSTEMC_INSTALL_DIR?g" \
					$EXEC_DIR/def/Makefile_for_systemc.def \
					> $SYSTEMC_DEV_DIR/Makefile
			fi
		fi
	fi
done
