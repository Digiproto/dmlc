// Copyright 2005-2009 Virtutech AB
dml 1.2;

device simple_device;

parameter desc = "DML device template";
parameter bangang = "bangbang";
parameter oubang = "oubang";

constant OU = "ou";
constant BANG = "bang";

import "utility.dml";
import "pci-bridge.dml";

template channel {
	//parameter configuration = "required";
	interface mii;
}
template chn_regs {
	parameter chn_no default undefined;
	//parameter function = 0;
	parameter register_size = 1;
	register rhr_thr_ldl	@ 0x0 "recieve holding register, transmit holding register or div latch low byte" {
	method write(val) {
		local uint8 tm_idx;
		log "info", 2 : "console not conncet,send to console fail";
	}
	method read() -> (val) {
		log "info", 2 : "cpu read 0x%x from rhr success",val;
		}
	}//end register rhr_thr_ldl
}

bank regs {
    parameter register_size = 4;
    register counter @ 0x00 {
        parameter documentation = "A simple counter.";
    }
}

bank regs {
	parameter ou = "oubang";
	parameter shen = "shenoubang";
	register counter {
		parameter reg_bangbang = "bangbang";
		parameter reg_ou = "out";
	}
}
// The init and post_init methods can be removed if they are not needed

method init {
    // Add code here that will be run to set the empty state of the
    // model, before any configuration or checkpointed attributes are
    // set.
}

method post_init {
    // Add code here that is run after all configuration attributes
    // have been set.  This happens both when the initial
    // configuration is set and when the configuration is loaded from
    // a checkpoint.
}
