// This module is used to testing other c key-words.
// Author: eJim Lee
// Email:  lyjforjob@gmail.com
// Date:   2013-04-24

dml 1.2;

// This device is named as keywords.
device keywords_other_c;

///////////////////////
// Object Parameters //
///////////////////////

parameter desc          = "device for keywords";
parameter documentation = "This modules is used to testing a part of key-words";
parameter limitations   = ("This module only be used for test");

/////////////
// Imports //
/////////////

import "utility.dml";

////////////
// Method //
////////////

method test4type() {
	local  char   c = 97;
	local  double d = 3.3;
	local  float  f = 5.5;
	local  int    i = 7;
	static int    a = 0;
	auto   int    b = 11;
	local  const char *s = "new const char*";
	local  char  *n;

	a++;
	log "info": "c = %c, d = %f, f = %f, i = %d, a = %d, b = %d", c, d, f, i, a, b;
	log "info": "sizeof(c) = %d, sizeof(d) = %d", sizeof(c), sizeof(d);
	i = 13.13;
	d = f = 17;
	c = 98.98;
	log "info": "c = %c, d = %f, f = %f, i = %d, a = %d, b = %d", c, d, f, i, a, b;
	log "info": "char s = %s", s;
	call $strcpy(s) -> (n);
	log "info": "char n = %s", n;
	delete(n);
}

method strcpy(const char *str) -> (char *dest)
{
	local const char *p;
	local char *buf;
	local char *pd;
	local int i;

	for(i = 0, p = str; *p != 0; p++, i++);
	buf = new char[i + 1];

	for(p = str, pd = buf; *p != 0; p++, pd++) {
		*pd = *p;
	}
	*pd = 0;
	dest = buf;
}

//////////////////////
// Bank declaration //
//////////////////////

bank regs {
	register r_method size 4 @ 0x0 {
		method get() -> (value) {
			call $test4type();
			call $test4type();
		}
	}
}

///////////////////
// Device Method //
///////////////////

method init() {
	log "info": "the device init method is running.";
}

